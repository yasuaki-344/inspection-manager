version: '3.9'
services:
  web:
    build:
      context: ./src/ClientApp/
    depends_on:
      - app
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    networks:
      - frontend
  app:
    build: ./src/
    depends_on:
      - database
    environment:
      ConnectionStrings__InspectionContext: Host=database;Database=${DATABASE};Username=${DB_USERNAME};Password=${DB_PASSWORD}
      ASPNETCORE_ENVIRONMENT: Production
    networks:
      - frontend
      - backend
  database:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DATABASE}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - backend
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
